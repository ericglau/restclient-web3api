/**
 * Amberdata Web3API for Gas Predictions
 * This is an OpenAPI document for Amberdata Gas Predictions https://docs.amberdata.io/reference#get-gas-predictions
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ericglau@outlook.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.example.demo.models;

import com.example.demo.models.GasPrediction;

import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.json.bind.annotation.JsonbProperty;

public class GasPredictions  {
  
  private GasPrediction average;

  private GasPrediction fast;

  private GasPrediction fastest;

  private GasPrediction safeLow;
  
 /**
   * Get average
   * @return average
  **/
  @JsonbProperty("average")
  public GasPrediction getAverage() {
    return average;
  }

  /**
    * Set average
  **/
  public void setAverage(GasPrediction average) {
    this.average = average;
  }

  public GasPredictions average(GasPrediction average) {
    this.average = average;
    return this;
  }

 /**
   * Get fast
   * @return fast
  **/
  @JsonbProperty("fast")
  public GasPrediction getFast() {
    return fast;
  }

  /**
    * Set fast
  **/
  public void setFast(GasPrediction fast) {
    this.fast = fast;
  }

  public GasPredictions fast(GasPrediction fast) {
    this.fast = fast;
    return this;
  }

 /**
   * Get fastest
   * @return fastest
  **/
  @JsonbProperty("fastest")
  public GasPrediction getFastest() {
    return fastest;
  }

  /**
    * Set fastest
  **/
  public void setFastest(GasPrediction fastest) {
    this.fastest = fastest;
  }

  public GasPredictions fastest(GasPrediction fastest) {
    this.fastest = fastest;
    return this;
  }

 /**
   * Get safeLow
   * @return safeLow
  **/
  @JsonbProperty("safeLow")
  public GasPrediction getSafeLow() {
    return safeLow;
  }

  /**
    * Set safeLow
  **/
  public void setSafeLow(GasPrediction safeLow) {
    this.safeLow = safeLow;
  }

  public GasPredictions safeLow(GasPrediction safeLow) {
    this.safeLow = safeLow;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GasPredictions {\n");
    
    sb.append("    average: ").append(toIndentedString(average)).append("\n");
    sb.append("    fast: ").append(toIndentedString(fast)).append("\n");
    sb.append("    fastest: ").append(toIndentedString(fastest)).append("\n");
    sb.append("    safeLow: ").append(toIndentedString(safeLow)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

